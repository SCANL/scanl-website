@inproceedings{2020:ICSEW:ANDROID,
 abstract = {An essential activity of software maintenance is the refactoring of source code. Refactoring operations enable developers to take necessary actions to correct bad programming practices (i.e., smells) in the source code of both production and test files. With unit testing being a vital and fundamental part of ensuring the quality of a system, developers must address smelly test code. In this paper, we empirically explore the impact and relationship between refactoring operations and test smells in 250 open-source Android applications (apps). Our experiments showed that the type of refactoring operations performed by developers on test files differ from those performed on non-test files. Further, results around test smells show a co-occurrence between certain smell types and refactorings, and how refactorings are utilized to eliminate smells. Findings from this study will not only further our knowledge of refactoring operations on test files, but will also help developers in understanding the possible ways on how to maintain their apps.},
 address = {New York, NY, USA},
 author = {Peruma, Anthony and Newman, Christian D. and Mkaouer, Mohamed Wiem and Ouni, Ali and Palomba, Fabio},
 booktitle = {Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops},
 doi = {10.1145/3387940.3392189},
 isbn = {9781450379632},
 keywords = {Android applications, Software maintenance and evolution, Unit testing, Test smells, Refactoring},
 location = {Seoul, Republic of Korea},
 numpages = {8},
 pages = {350â€“357},
 publisher = {Association for Computing Machinery},
 series = {ICSEW'20},
 title = {An Exploratory Study on the Refactoring of Unit Test Files in Android Applications},
 url = {https://doi.org/10.1145/3387940.3392189},
 year = {2020}
}

