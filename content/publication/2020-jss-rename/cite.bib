@article{2020:JSS:RENAME,
 abstract = {Identifier names are the atoms of program comprehension. Weak identifier names decrease developer productivity and degrade the performance of automated approaches that leverage identifier names in source code analysis; threatening many of the advantages which stand to be gained from advances in artificial intelligence and machine learning. Therefore, it is vital to support developers in naming and renaming identifiers. In this paper, we extend our prior work, which studies the primary method through which names evolve: rename refactorings. In our prior work, we contextualize rename changes by examining commit messages and other refactorings. In this extension, we further consider data type changes which co-occur with these renames, with a goal of understanding how data type changes influence the structure and semantics of renames. In the long term, the outcomes of this study will be used to support research into: (1) recommending when a rename should be applied, (2) recommending how to rename an identifier, and (3) developing a model that describes how developers mentally synergize names using domain and project knowledge. We provide insights into how our data can support rename recommendation and analysis in the future, and reflect on the significant challenges, highlighted by our study, for future research in recommending renames.},
 author = {Anthony Peruma and Mohamed Wiem Mkaouer and Michael J. Decker and Christian D. Newman},
 doi = {https://doi.org/10.1016/j.jss.2020.110704},
 issn = {0164-1212},
 journal = {Journal of Systems and Software},
 keywords = {Program comprehension, Identifier names, Refactoring, Rename refactoring, Data types},
 pages = {110704},
 title = {Contextualizing rename decisions using refactorings, commit messages, and data types},
 url = {https://www.sciencedirect.com/science/article/pii/S0164121220301503},
 volume = {169},
 year = {2020}
}

